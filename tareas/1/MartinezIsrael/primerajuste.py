# -*- coding: utf-8 -*-
"""PrimerAjuste.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/166KLk6hKO63zBGUtav0qPsaIrQdFmXNh
"""

##Primer Ajuste
from typing_extensions import Self
class Memoria:
    def __init__(self, tamaño=30):
        self.tamaño = tamaño
        self.memoria = '-' * tamaño

    def imprimir_memoria(self):
        print("Asignación actual:\n")
        print(self.memoria)

    def asignar(self, proceso, unidades):
        espacio_libre = self.memoria.find('-' * unidades)
        if espacio_libre != -1:
            self.memoria = self.memoria[:espacio_libre] + proceso * unidades + self.memoria[espacio_libre + unidades:]
            self.imprimir_memoria()
        else:
            if self.memoria.count("-")< unidades:
              print("Sin espacio disponible, liberar algun proceso")
            else:

              self.compactar()
              self.asignar(proceso, unidades)

    def liberar(self, proceso):
        self.memoria = self.memoria.replace(proceso, '-')
        self.imprimir_memoria()

    def compactar(self):
        ocupado = ''.join(filter(lambda x: x != '-', self.memoria))
        libre = '-' * (self.tamaño - len(ocupado))
        self.memoria = ocupado + libre
        print("*Compactación requerida*")
        self.imprimir_memoria()

def main():
    gestor_memoria = Memoria()
    while True:
        gestor_memoria.imprimir_memoria()
        acción = input("Asignar (0) o liberar (1): ")
        if acción == '0':
            if max(gestor_memoria.memoria)=="-":
              proceso = input("Nuevo proceso (A): ")
            else:
              proceso = input(f"Nuevo proceso ({chr(ord(max(gestor_memoria.memoria))+1)}): ")

            unidades = int(input("Unidades de memoria (2-15): "))
            gestor_memoria.asignar(proceso, unidades)
        elif acción == '1':
            if gestor_memoria.memoria.count("-")==30:
              print("Sin proceso que liberar")
            else:
              lista_limpia = ''.join(gestor_memoria.memoria).replace('-', '')
              proceso = input(f"Proceso a liberar ({sorted(set(lista_limpia))}): ")
              gestor_memoria.liberar(proceso)

if __name__ == "__main__":
    main()